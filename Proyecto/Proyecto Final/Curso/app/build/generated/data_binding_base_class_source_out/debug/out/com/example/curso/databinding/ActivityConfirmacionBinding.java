// Generated by view binder compiler. Do not edit!
package com.example.curso.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.constraint.Guideline;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import com.example.curso.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmacionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout back;

  @NonNull
  public final Button buttonConfirmar;

  @NonNull
  public final Button buttonTip10;

  @NonNull
  public final Button buttonTip20;

  @NonNull
  public final Button buttonTip30;

  @NonNull
  public final CheckBox checkboxUtensils;

  @NonNull
  public final ConstraintLayout containerDeliveryFee;

  @NonNull
  public final ConstraintLayout containerPaymentDetails;

  @NonNull
  public final ConstraintLayout containerPaymentMethod;

  @NonNull
  public final ConstraintLayout containerPlanetCupones;

  @NonNull
  public final ConstraintLayout containerTips;

  @NonNull
  public final ConstraintLayout containerTipsAmounts;

  @NonNull
  public final ConstraintLayout containerTotalAmount;

  @NonNull
  public final ConstraintLayout containerTotalFood;

  @NonNull
  public final TextView etxtTipA;

  @NonNull
  public final EditText etxtUserinfo;

  @NonNull
  public final Guideline guidelineL;

  @NonNull
  public final Guideline guidelineR;

  @NonNull
  public final Spinner spPaymentmethod;

  @NonNull
  public final TextView txtCouponV;

  @NonNull
  public final TextView txtCoupons;

  @NonNull
  public final TextView txtDeliveryFee;

  @NonNull
  public final TextView txtDeliveryFeeV;

  @NonNull
  public final TextView txtDireccion;

  @NonNull
  public final TextView txtHeaderSummaryOrder;

  @NonNull
  public final TextView txtItemTotal;

  @NonNull
  public final TextView txtItemTotalV;

  @NonNull
  public final TextView txtMipedido;

  @NonNull
  public final TextView txtPaymentmethod;

  @NonNull
  public final TextView txtPaymentsD;

  @NonNull
  public final TextView txtSaved;

  @NonNull
  public final TextView txtSummaryOrder;

  @NonNull
  public final TextView txtTip;

  @NonNull
  public final TextView txtTipM;

  @NonNull
  public final TextView txtTotal;

  @NonNull
  public final TextView txtTotalValue;

  private ActivityConfirmacionBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout back, @NonNull Button buttonConfirmar, @NonNull Button buttonTip10,
      @NonNull Button buttonTip20, @NonNull Button buttonTip30, @NonNull CheckBox checkboxUtensils,
      @NonNull ConstraintLayout containerDeliveryFee,
      @NonNull ConstraintLayout containerPaymentDetails,
      @NonNull ConstraintLayout containerPaymentMethod,
      @NonNull ConstraintLayout containerPlanetCupones, @NonNull ConstraintLayout containerTips,
      @NonNull ConstraintLayout containerTipsAmounts,
      @NonNull ConstraintLayout containerTotalAmount, @NonNull ConstraintLayout containerTotalFood,
      @NonNull TextView etxtTipA, @NonNull EditText etxtUserinfo, @NonNull Guideline guidelineL,
      @NonNull Guideline guidelineR, @NonNull Spinner spPaymentmethod, @NonNull TextView txtCouponV,
      @NonNull TextView txtCoupons, @NonNull TextView txtDeliveryFee,
      @NonNull TextView txtDeliveryFeeV, @NonNull TextView txtDireccion,
      @NonNull TextView txtHeaderSummaryOrder, @NonNull TextView txtItemTotal,
      @NonNull TextView txtItemTotalV, @NonNull TextView txtMipedido,
      @NonNull TextView txtPaymentmethod, @NonNull TextView txtPaymentsD,
      @NonNull TextView txtSaved, @NonNull TextView txtSummaryOrder, @NonNull TextView txtTip,
      @NonNull TextView txtTipM, @NonNull TextView txtTotal, @NonNull TextView txtTotalValue) {
    this.rootView = rootView;
    this.back = back;
    this.buttonConfirmar = buttonConfirmar;
    this.buttonTip10 = buttonTip10;
    this.buttonTip20 = buttonTip20;
    this.buttonTip30 = buttonTip30;
    this.checkboxUtensils = checkboxUtensils;
    this.containerDeliveryFee = containerDeliveryFee;
    this.containerPaymentDetails = containerPaymentDetails;
    this.containerPaymentMethod = containerPaymentMethod;
    this.containerPlanetCupones = containerPlanetCupones;
    this.containerTips = containerTips;
    this.containerTipsAmounts = containerTipsAmounts;
    this.containerTotalAmount = containerTotalAmount;
    this.containerTotalFood = containerTotalFood;
    this.etxtTipA = etxtTipA;
    this.etxtUserinfo = etxtUserinfo;
    this.guidelineL = guidelineL;
    this.guidelineR = guidelineR;
    this.spPaymentmethod = spPaymentmethod;
    this.txtCouponV = txtCouponV;
    this.txtCoupons = txtCoupons;
    this.txtDeliveryFee = txtDeliveryFee;
    this.txtDeliveryFeeV = txtDeliveryFeeV;
    this.txtDireccion = txtDireccion;
    this.txtHeaderSummaryOrder = txtHeaderSummaryOrder;
    this.txtItemTotal = txtItemTotal;
    this.txtItemTotalV = txtItemTotalV;
    this.txtMipedido = txtMipedido;
    this.txtPaymentmethod = txtPaymentmethod;
    this.txtPaymentsD = txtPaymentsD;
    this.txtSaved = txtSaved;
    this.txtSummaryOrder = txtSummaryOrder;
    this.txtTip = txtTip;
    this.txtTipM = txtTipM;
    this.txtTotal = txtTotal;
    this.txtTotalValue = txtTotalValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmacionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmacionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirmacion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmacionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout back = (ConstraintLayout) rootView;

      id = R.id.button_Confirmar;
      Button buttonConfirmar = ViewBindings.findChildViewById(rootView, id);
      if (buttonConfirmar == null) {
        break missingId;
      }

      id = R.id.button_tip10;
      Button buttonTip10 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTip10 == null) {
        break missingId;
      }

      id = R.id.button_tip20;
      Button buttonTip20 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTip20 == null) {
        break missingId;
      }

      id = R.id.button_tip30;
      Button buttonTip30 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTip30 == null) {
        break missingId;
      }

      id = R.id.checkbox_utensils;
      CheckBox checkboxUtensils = ViewBindings.findChildViewById(rootView, id);
      if (checkboxUtensils == null) {
        break missingId;
      }

      id = R.id.container_deliveryFee;
      ConstraintLayout containerDeliveryFee = ViewBindings.findChildViewById(rootView, id);
      if (containerDeliveryFee == null) {
        break missingId;
      }

      id = R.id.container_paymentDetails;
      ConstraintLayout containerPaymentDetails = ViewBindings.findChildViewById(rootView, id);
      if (containerPaymentDetails == null) {
        break missingId;
      }

      id = R.id.container_paymentMethod;
      ConstraintLayout containerPaymentMethod = ViewBindings.findChildViewById(rootView, id);
      if (containerPaymentMethod == null) {
        break missingId;
      }

      id = R.id.container_planetCupones;
      ConstraintLayout containerPlanetCupones = ViewBindings.findChildViewById(rootView, id);
      if (containerPlanetCupones == null) {
        break missingId;
      }

      id = R.id.container_tips;
      ConstraintLayout containerTips = ViewBindings.findChildViewById(rootView, id);
      if (containerTips == null) {
        break missingId;
      }

      id = R.id.container_tipsAmounts;
      ConstraintLayout containerTipsAmounts = ViewBindings.findChildViewById(rootView, id);
      if (containerTipsAmounts == null) {
        break missingId;
      }

      id = R.id.container_totalAmount;
      ConstraintLayout containerTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (containerTotalAmount == null) {
        break missingId;
      }

      id = R.id.container_totalFood;
      ConstraintLayout containerTotalFood = ViewBindings.findChildViewById(rootView, id);
      if (containerTotalFood == null) {
        break missingId;
      }

      id = R.id.etxt_tipA;
      TextView etxtTipA = ViewBindings.findChildViewById(rootView, id);
      if (etxtTipA == null) {
        break missingId;
      }

      id = R.id.etxt_userinfo;
      EditText etxtUserinfo = ViewBindings.findChildViewById(rootView, id);
      if (etxtUserinfo == null) {
        break missingId;
      }

      id = R.id.guidelineL;
      Guideline guidelineL = ViewBindings.findChildViewById(rootView, id);
      if (guidelineL == null) {
        break missingId;
      }

      id = R.id.guidelineR;
      Guideline guidelineR = ViewBindings.findChildViewById(rootView, id);
      if (guidelineR == null) {
        break missingId;
      }

      id = R.id.sp_paymentmethod;
      Spinner spPaymentmethod = ViewBindings.findChildViewById(rootView, id);
      if (spPaymentmethod == null) {
        break missingId;
      }

      id = R.id.txt_couponV;
      TextView txtCouponV = ViewBindings.findChildViewById(rootView, id);
      if (txtCouponV == null) {
        break missingId;
      }

      id = R.id.txt_coupons;
      TextView txtCoupons = ViewBindings.findChildViewById(rootView, id);
      if (txtCoupons == null) {
        break missingId;
      }

      id = R.id.txt_deliveryFee;
      TextView txtDeliveryFee = ViewBindings.findChildViewById(rootView, id);
      if (txtDeliveryFee == null) {
        break missingId;
      }

      id = R.id.txt_deliveryFeeV;
      TextView txtDeliveryFeeV = ViewBindings.findChildViewById(rootView, id);
      if (txtDeliveryFeeV == null) {
        break missingId;
      }

      id = R.id.txt_direccion;
      TextView txtDireccion = ViewBindings.findChildViewById(rootView, id);
      if (txtDireccion == null) {
        break missingId;
      }

      id = R.id.txt_headerSummaryOrder;
      TextView txtHeaderSummaryOrder = ViewBindings.findChildViewById(rootView, id);
      if (txtHeaderSummaryOrder == null) {
        break missingId;
      }

      id = R.id.txt_itemTotal;
      TextView txtItemTotal = ViewBindings.findChildViewById(rootView, id);
      if (txtItemTotal == null) {
        break missingId;
      }

      id = R.id.txt_itemTotalV;
      TextView txtItemTotalV = ViewBindings.findChildViewById(rootView, id);
      if (txtItemTotalV == null) {
        break missingId;
      }

      id = R.id.txt_mipedido;
      TextView txtMipedido = ViewBindings.findChildViewById(rootView, id);
      if (txtMipedido == null) {
        break missingId;
      }

      id = R.id.txt_paymentmethod;
      TextView txtPaymentmethod = ViewBindings.findChildViewById(rootView, id);
      if (txtPaymentmethod == null) {
        break missingId;
      }

      id = R.id.txt_paymentsD;
      TextView txtPaymentsD = ViewBindings.findChildViewById(rootView, id);
      if (txtPaymentsD == null) {
        break missingId;
      }

      id = R.id.txt_saved;
      TextView txtSaved = ViewBindings.findChildViewById(rootView, id);
      if (txtSaved == null) {
        break missingId;
      }

      id = R.id.txt_summaryOrder;
      TextView txtSummaryOrder = ViewBindings.findChildViewById(rootView, id);
      if (txtSummaryOrder == null) {
        break missingId;
      }

      id = R.id.txt_tip;
      TextView txtTip = ViewBindings.findChildViewById(rootView, id);
      if (txtTip == null) {
        break missingId;
      }

      id = R.id.txt_tipM;
      TextView txtTipM = ViewBindings.findChildViewById(rootView, id);
      if (txtTipM == null) {
        break missingId;
      }

      id = R.id.txt_total;
      TextView txtTotal = ViewBindings.findChildViewById(rootView, id);
      if (txtTotal == null) {
        break missingId;
      }

      id = R.id.txt_totalValue;
      TextView txtTotalValue = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalValue == null) {
        break missingId;
      }

      return new ActivityConfirmacionBinding((ConstraintLayout) rootView, back, buttonConfirmar,
          buttonTip10, buttonTip20, buttonTip30, checkboxUtensils, containerDeliveryFee,
          containerPaymentDetails, containerPaymentMethod, containerPlanetCupones, containerTips,
          containerTipsAmounts, containerTotalAmount, containerTotalFood, etxtTipA, etxtUserinfo,
          guidelineL, guidelineR, spPaymentmethod, txtCouponV, txtCoupons, txtDeliveryFee,
          txtDeliveryFeeV, txtDireccion, txtHeaderSummaryOrder, txtItemTotal, txtItemTotalV,
          txtMipedido, txtPaymentmethod, txtPaymentsD, txtSaved, txtSummaryOrder, txtTip, txtTipM,
          txtTotal, txtTotalValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
